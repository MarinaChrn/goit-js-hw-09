{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,WAGA,IAMcC,EAAOC,EANfC,EAAeC,SAASC,cAAc,kBACtCC,EAASF,SAASC,cAAc,iBAChCE,EAAWH,SAASC,cAAc,mBAElCG,GADcJ,SAASC,cAAc,mBAC5BD,SAASC,cAAc,SAItCG,EAAOC,iBAAiB,UAAU,SAASC,GACzCA,EAAEC,iBACFT,EAAaU,OAAOT,EAAaU,OAGjC,IAFA,IAAMC,EAAOF,OAAON,EAAOO,OACrBE,EAASH,OAAOL,EAASM,OACtBG,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAI/BC,EADS,CAACC,SADCF,EAAE,EACOG,MAFpBlB,EAAQC,EAAWY,EAAKE,G,IAgB5B,IAAMC,EAAY,SAACG,GACHC,YAAW,WAV3B,IAAuBC,EAACC,EAAUC,GAAXF,EAWLF,EAXMG,EAADD,EAACJ,SAAUM,EAAXF,EAAWH,MACVM,KAAKC,SAAW,GAE7BC,QAAQC,QAAQ,CAACV,SAAAK,EAAUJ,MAAAK,IAE3BG,QAAQE,OAAO,CAACX,SAAAK,EAAUJ,MAAAK,KAOhCM,MAAK,SAAAR,G,IAAGS,EAAQT,EAARJ,SAAUc,EAAKV,EAALH,MACjBc,EAAAlC,GAASmC,OAAOC,QAAQ,uBAAwCC,OAAfL,EAAS,QAAYK,OAANJ,EAAM,M,IAEvEK,OAAM,SAAAf,G,IAAGgB,EAAQhB,EAARJ,SAAUqB,EAAKjB,EAALH,MAClBc,EAAAlC,GAASmC,OAAOM,QAAQ,sBAAqCJ,OAAfE,EAAS,QAAYF,OAANG,EAAM,M,MAEpE,CAACpB,MAAAlB,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst firstDelayEl = document.querySelector('[name=\"delay\"]');\nconst stepEl = document.querySelector('[name=\"step\"]');\nconst amountEl = document.querySelector('[name=\"amount\"]');\nconst btnSubmitEl = document.querySelector('[type=\"submit\"]');\nconst formEl = document.querySelector('form');\n\nlet position, delay, firstDelay;\nlet posDel ={};\nformEl.addEventListener('submit', function(e) {\n  e.preventDefault();\n  firstDelay = Number(firstDelayEl.value);\n  const step = Number(stepEl.value);\n  const amount = Number(amountEl.value);\n  for (let i = 0; i < amount; i += 1) {\n    delay = firstDelay+step*i;\n    position = i+1;\n    posDel = {position, delay};\n    doPromise(posDel);\n  };\n});\n\nfunction createPromise({position, delay}) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    return Promise.resolve({position, delay});\n  } else {\n    return Promise.reject({position, delay});\n  }\n}\n\nconst doPromise = (posDel) => {\n  const timer = setTimeout(()=>{\n    createPromise(posDel)\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n  }, {delay})\n};\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$firstDelay","$ce04d3a99e08e73b$var$firstDelayEl","document","querySelector","$ce04d3a99e08e73b$var$stepEl","$ce04d3a99e08e73b$var$amountEl","$ce04d3a99e08e73b$var$formEl","addEventListener","e","preventDefault","Number","value","step","amount","i","$ce04d3a99e08e73b$var$doPromise","position","delay","posDel1","setTimeout","param","position1","delay1","Math","random","Promise","resolve","reject","then","position2","delay2","$parcel$interopDefault","Notify","success","concat","catch","position3","delay3","failure"],"version":3,"file":"03-promises.2735f371.js.map"}