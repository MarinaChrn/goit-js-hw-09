{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,WAGA,IAMqBC,EANfC,EAAeC,SAASC,cAAc,kBACtCC,EAASF,SAASC,cAAc,iBAChCE,EAAWH,SAASC,cAAc,mBAElCG,GADcJ,SAASC,cAAc,mBAC5BD,SAASC,cAAc,SAKtCG,EAAOC,iBAAiB,UAAU,SAASC,G,kBAMvCC,YAAW,WAITC,EADS,CAACC,SAFCC,EAAE,EAEOC,MADZb,EAAWc,EAAKF,G,GAGxBZ,EAAWc,EAAKF,E,EAVpBJ,EAAEO,iBACFf,EAAagB,OAAOf,EAAagB,OAGjC,IAFA,IAAMH,EAAOE,OAAOZ,EAAOa,OACrBC,EAASF,OAAOX,EAASY,OACtBE,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAACC,EAAAD,E,IAqBpC,IAAMT,EAAY,SAACW,GATnB,IAAuBC,EAACC,EAAUC,GAAXF,EAULD,EAVME,EAADD,EAACX,SAAUa,EAAXF,EAAWT,MACVY,KAAKC,SAAW,GAE7BC,QAAQC,QAAQ,CAACjB,SAAAY,EAAUV,MAAAW,IAE3BG,QAAQE,OAAO,CAAClB,SAAAY,EAAUV,MAAAW,KAMhCM,MAAK,SAAAR,G,IAAGS,EAAQT,EAARX,SAAUqB,EAAKV,EAALT,MACjBoB,EAAAnC,GAASoC,OAAOC,QAAQ,uBAAwCC,OAAfL,EAAS,QAAYK,OAANJ,EAAM,M,IAEvEK,OAAM,SAAAf,G,IAAGgB,EAAQhB,EAARX,SAAU4B,EAAKjB,EAALT,MAClBoB,EAAAnC,GAASoC,OAAOM,QAAQ,sBAAqCJ,OAAfE,EAAS,QAAYF,OAANG,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst firstDelayEl = document.querySelector('[name=\"delay\"]');\nconst stepEl = document.querySelector('[name=\"step\"]');\nconst amountEl = document.querySelector('[name=\"amount\"]');\nconst btnSubmitEl = document.querySelector('[type=\"submit\"]');\nconst formEl = document.querySelector('form');\n\nlet position, delay, firstDelay;\nlet posDel ={};\n// let timer;\nformEl.addEventListener('submit', function(e) {\n  e.preventDefault();\n  firstDelay = Number(firstDelayEl.value);\n  const step = Number(stepEl.value);\n  const amount = Number(amountEl.value);\n  for (let i = 0; i < amount; i += 1) {\n    setTimeout(function(){\n      position = i+1;\n      delay = firstDelay+step*i;\n      posDel = {position, delay};\n      doPromise(posDel);\n    },firstDelay+step*i);\n  };\n});\n\n\n\nfunction createPromise({position, delay}) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    return Promise.resolve({position, delay});\n  } else {\n    return Promise.reject({position, delay});\n  }\n}\n\nconst doPromise = (posDel) => {\n    createPromise(posDel)\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n};"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$firstDelay","$ce04d3a99e08e73b$var$firstDelayEl","document","querySelector","$ce04d3a99e08e73b$var$stepEl","$ce04d3a99e08e73b$var$amountEl","$ce04d3a99e08e73b$var$formEl","addEventListener","e","setTimeout","$ce04d3a99e08e73b$var$doPromise","position","i","delay","step","preventDefault","Number","value","amount","i1","_loop","posDel1","param","position1","delay1","Math","random","Promise","resolve","reject","then","position2","delay2","$parcel$interopDefault","Notify","success","concat","catch","position3","delay3","failure"],"version":3,"file":"03-promises.ce4275a6.js.map"}